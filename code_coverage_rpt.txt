Coverage Report by instance with details

=================================================================================
=== Instance: /top/FIFO_IF
=== Design Unit: work.FIFO_Interface
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         86        86         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/FIFO_IF --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                       almostempty           1           1      100.00 
                                        almostfull           1           1      100.00 
                                               clk           1           1      100.00 
                                     data_in[15-0]           1           1      100.00 
                                    data_out[15-0]           1           1      100.00 
                                             empty           1           1      100.00 
                                              full           1           1      100.00 
                                          overflow           1           1      100.00 
                                             rd_en           1           1      100.00 
                                             rst_n           1           1      100.00 
                                         underflow           1           1      100.00 
                                            wr_ack           1           1      100.00 
                                             wr_en           1           1      100.00 

Total Node Count     =         43 
Toggled Node Count   =         43 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (86 of 86 bins)

=================================================================================
=== Instance: /top/DUT/Assertions_inst
=== Design Unit: work.Assertions
=================================================================================

Assertion Coverage:
    Assertions                      31        31         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/Assertions_inst/max_fifo_addr_p
                     Assertions.sv(13)                  0          1
/top/DUT/Assertions_inst/wr_ptr1_p
                     Assertions.sv(20)                  0          1
/top/DUT/Assertions_inst/wr_ptr2_p
                     Assertions.sv(26)                  0          1
/top/DUT/Assertions_inst/rd_ptr1_p
                     Assertions.sv(33)                  0          1
/top/DUT/Assertions_inst/rd_ptr2_p
                     Assertions.sv(39)                  0          1
/top/DUT/Assertions_inst/counter1_p
                     Assertions.sv(47)                  0          1
/top/DUT/Assertions_inst/counter2_p
                     Assertions.sv(53)                  0          1
/top/DUT/Assertions_inst/counter3_p
                     Assertions.sv(60)                  0          1
/top/DUT/Assertions_inst/counter4_p
                     Assertions.sv(66)                  0          1
/top/DUT/Assertions_inst/counter5_p
                     Assertions.sv(72)                  0          1
/top/DUT/Assertions_inst/wr_ack1_p
                     Assertions.sv(79)                  0          1
/top/DUT/Assertions_inst/wr_ack2_p
                     Assertions.sv(85)                  0          1
/top/DUT/Assertions_inst/wr_ack3_p
                     Assertions.sv(91)                  0          1
/top/DUT/Assertions_inst/overflow1_p
                     Assertions.sv(98)                  0          1
/top/DUT/Assertions_inst/overflow2_p
                     Assertions.sv(104)                 0          1
/top/DUT/Assertions_inst/overflow3_p
                     Assertions.sv(110)                 0          1
/top/DUT/Assertions_inst/underflow1_p
                     Assertions.sv(117)                 0          1
/top/DUT/Assertions_inst/underflow2_p
                     Assertions.sv(123)                 0          1
/top/DUT/Assertions_inst/underflow3_p
                     Assertions.sv(129)                 0          1
/top/DUT/Assertions_inst/full1_p
                     Assertions.sv(137)                 0          1
/top/DUT/Assertions_inst/full2_p
                     Assertions.sv(143)                 0          1
/top/DUT/Assertions_inst/almostfull1_p
                     Assertions.sv(150)                 0          1
/top/DUT/Assertions_inst/almostfull2_p
                     Assertions.sv(156)                 0          1
/top/DUT/Assertions_inst/full_almostfull1_p
                     Assertions.sv(163)                 0          1
/top/DUT/Assertions_inst/full_almostfull2_p
                     Assertions.sv(170)                 0          1
/top/DUT/Assertions_inst/empty1_p
                     Assertions.sv(177)                 0          1
/top/DUT/Assertions_inst/empty2_p
                     Assertions.sv(183)                 0          1
/top/DUT/Assertions_inst/almostempty1_p
                     Assertions.sv(191)                 0          1
/top/DUT/Assertions_inst/almostempty2_p
                     Assertions.sv(197)                 0          1
/top/DUT/Assertions_inst/empty_almostempty1_p
                     Assertions.sv(205)                 0          1
/top/DUT/Assertions_inst/empty_almostempty2_p
                     Assertions.sv(212)                 0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        12        12         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/Assertions_inst

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Assertions.sv
------------------------------------IF Branch------------------------------------
    19                                       475     Count coming in to IF
    19              1                         33     	if(!FIFO_IF.rst_n)
                                             442     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    32                                       356     Count coming in to IF
    32              1                         34     	if(!FIFO_IF.rst_n)
                                             322     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    46                                       541     Count coming in to IF
    46              1                         36     	if(!FIFO_IF.rst_n)
                                             505     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    78                                       459     Count coming in to IF
    78              1                         26     	if(!FIFO_IF.rst_n)
                                             433     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    97                                       316     Count coming in to IF
    97              1                         24     	if(!FIFO_IF.rst_n)
                                             292     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    116                                       58     Count coming in to IF
    116             1                         19     	if(!FIFO_IF.rst_n)
                                              39     All False Count
Branch totals: 2 hits of 2 branches = 100.00%



Directive Coverage:
    Directives                      24        24         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/Assertions_inst/wr_ptr2_c       Assertions Verilog  SVA  Assertions.sv(27)
                                                                               415 Covered   
/top/DUT/Assertions_inst/rd_ptr2_c       Assertions Verilog  SVA  Assertions.sv(40)
                                                                               295 Covered   
/top/DUT/Assertions_inst/counter2_c      Assertions Verilog  SVA  Assertions.sv(54)
                                                                               291 Covered   
/top/DUT/Assertions_inst/counter3_c      Assertions Verilog  SVA  Assertions.sv(61)
                                                                                92 Covered   
/top/DUT/Assertions_inst/counter4_c      Assertions Verilog  SVA  Assertions.sv(67)
                                                                                86 Covered   
/top/DUT/Assertions_inst/counter5_c      Assertions Verilog  SVA  Assertions.sv(73)
                                                                                 7 Covered   
/top/DUT/Assertions_inst/wr_ack2_c       Assertions Verilog  SVA  Assertions.sv(86)
                                                                               415 Covered   
/top/DUT/Assertions_inst/wr_ack3_c       Assertions Verilog  SVA  Assertions.sv(92)
                                                                               570 Covered   
/top/DUT/Assertions_inst/overflow2_c     Assertions Verilog  SVA  Assertions.sv(105)
                                                                               282 Covered   
/top/DUT/Assertions_inst/overflow3_c     Assertions Verilog  SVA  Assertions.sv(111)
                                                                               415 Covered   
/top/DUT/Assertions_inst/underflow2_c    Assertions Verilog  SVA  Assertions.sv(124)
                                                                                12 Covered   
/top/DUT/Assertions_inst/underflow3_c    Assertions Verilog  SVA  Assertions.sv(130)
                                                                               295 Covered   
/top/DUT/Assertions_inst/full1_c         Assertions Verilog  SVA  Assertions.sv(138)
                                                                               393 Covered   
/top/DUT/Assertions_inst/full2_c         Assertions Verilog  SVA  Assertions.sv(144)
                                                                               628 Covered   
/top/DUT/Assertions_inst/almostfull1_c   Assertions Verilog  SVA  Assertions.sv(151)
                                                                               272 Covered   
/top/DUT/Assertions_inst/almostfull2_c   Assertions Verilog  SVA  Assertions.sv(157)
                                                                               749 Covered   
/top/DUT/Assertions_inst/full_almostfull1_c 
                                         Assertions Verilog  SVA  Assertions.sv(164)
                                                                               123 Covered   
/top/DUT/Assertions_inst/full_almostfull2_c 
                                         Assertions Verilog  SVA  Assertions.sv(171)
                                                                                28 Covered   
/top/DUT/Assertions_inst/empty1_c        Assertions Verilog  SVA  Assertions.sv(178)
                                                                                48 Covered   
/top/DUT/Assertions_inst/empty2_c        Assertions Verilog  SVA  Assertions.sv(184)
                                                                               973 Covered   
/top/DUT/Assertions_inst/almostempty1_c  Assertions Verilog  SVA  Assertions.sv(192)
                                                                                46 Covered   
/top/DUT/Assertions_inst/almostempty2_c  Assertions Verilog  SVA  Assertions.sv(198)
                                                                               975 Covered   
/top/DUT/Assertions_inst/empty_almostempty1_c 
                                         Assertions Verilog  SVA  Assertions.sv(206)
                                                                                 4 Covered   
/top/DUT/Assertions_inst/empty_almostempty2_c 
                                         Assertions Verilog  SVA  Assertions.sv(213)
                                                                                15 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      10        10         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/Assertions_inst --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Assertions.sv
    1                                                module Assertions(FIFO_Interface.DUT FIFO_IF);
    2                                                
    3                                                localparam max_fifo_addr = DUT.max_fifo_addr;
    4                                                logic [max_fifo_addr-1:0] wr_ptr, rd_ptr;
    5                                                logic [max_fifo_addr:0] count;
    6                                                
    7               1                        439     assign wr_ptr = DUT.wr_ptr;
    8               1                        320     assign rd_ptr = DUT.rd_ptr;
    9               1                        505     assign count  = DUT.count;
    10                                               //EXTA
    11                                               // max_fifo_addr Assertions
    12              1                          1     always_comb begin  
    13                                               	max_fifo_addr_p: assert final (max_fifo_addr == $clog2(FIFO_IF.FIFO_DEPTH));	
    14                                               end
    15                                               //EXTA
    16                                               // wr_ptr Assertions
    17                                               //immediate because the rst is async
    18              1                        475     always_comb begin  
    19                                               	if(!FIFO_IF.rst_n)
    20                                               	wr_ptr1_p: assert final (wr_ptr == 0);	
    21                                               end
    22                                               
    23                                               property wr_ptr2;
    24                                                @(posedge FIFO_IF.clk) disable iff (!FIFO_IF.rst_n)  (FIFO_IF.wr_en && count < FIFO_IF.FIFO_DEPTH) |-> ##1 (wr_ptr == ($past(wr_ptr)+1'b1));
    25                                               endproperty
    26                                               wr_ptr2_p: assert property (wr_ptr2);
    27                                               wr_ptr2_c: cover  property (wr_ptr2);
    28                                               //EXTA
    29                                               // rd_ptr Assertions
    30                                               //immediate because the rst is async
    31              1                        356     always_comb begin  
    32                                               	if(!FIFO_IF.rst_n)
    33                                               	rd_ptr1_p: assert final (rd_ptr == 0);	
    34                                               end
    35                                               
    36                                               property rd_ptr2;
    37                                                @(posedge FIFO_IF.clk) disable iff (!FIFO_IF.rst_n)  (FIFO_IF.rd_en && count != 0) |-> ##1 (rd_ptr == ($past(rd_ptr)+1'b1));
    38                                               endproperty
    39                                               rd_ptr2_p: assert property (rd_ptr2);
    40                                               rd_ptr2_c: cover  property (rd_ptr2);
    41                                               
    42                                               
    43                                               // Counter Assertions 
    44                                               //immediate because the rst is async
    45              1                        541     always_comb begin  
    46                                               	if(!FIFO_IF.rst_n)
    47                                               	counter1_p: assert final (count == 0);	
    48                                               end
    49                                               
    50                                               property counter2;
    51                                                @(posedge FIFO_IF.clk) disable iff (!FIFO_IF.rst_n) (({FIFO_IF.wr_en, FIFO_IF.rd_en} == 2'b10) && !FIFO_IF.full) |-> ##1 (count == ($past(count)+1'b1))
    52                                               endproperty
    53                                               counter2_p: assert property (counter2);
    54                                               counter2_c: cover  property (counter2);
    55                                               
    56                                               
    57                                               property counter3;
    58                                                @(posedge FIFO_IF.clk) disable iff (!FIFO_IF.rst_n) (({FIFO_IF.wr_en, FIFO_IF.rd_en} == 2'b01) && !FIFO_IF.empty) |-> ##1 (count == ($past(count)-1'b1))
    59                                               endproperty
    60                                               counter3_p: assert property (counter3);
    61                                               counter3_c: cover  property (counter3);
    62                                               
    63                                               property counter4;
    64                                                @(posedge FIFO_IF.clk) disable iff (!FIFO_IF.rst_n) (({FIFO_IF.wr_en, FIFO_IF.rd_en} == 2'b11) && FIFO_IF.full) |-> ##1 (count == ($past(count)-1'b1))
    65                                               endproperty
    66                                               counter4_p: assert property (counter4);
    67                                               counter4_c: cover  property (counter4);
    68                                               
    69                                               property counter5;
    70                                                @(posedge FIFO_IF.clk) disable iff (!FIFO_IF.rst_n) (({FIFO_IF.wr_en, FIFO_IF.rd_en} == 2'b11) && FIFO_IF.empty) |-> ##1 (count == ($past(count)+1'b1))
    71                                               endproperty
    72                                               counter5_p: assert property (counter5);
    73                                               counter5_c: cover  property (counter5);
    74                                               
    75                                               // wr_ack Assertions
    76                                               //immediate because the rst is async
    77              1                        459     always_comb begin  
    78                                               	if(!FIFO_IF.rst_n)
    79                                               	wr_ack1_p: assert final (FIFO_IF.wr_ack == 0);	
    80                                               end
    81                                               
    82                                               property wr_ack2;
    83                                                @(posedge FIFO_IF.clk) disable iff (!FIFO_IF.rst_n) (FIFO_IF.wr_en && count < FIFO_IF.FIFO_DEPTH)  |-> ##1 (FIFO_IF.wr_ack == 1);
    84                                               endproperty
    85                                               wr_ack2_p: assert property (wr_ack2);
    86                                               wr_ack2_c: cover  property (wr_ack2);
    87                                               
    88                                               property wr_ack3;
    89                                                @(posedge FIFO_IF.clk) disable iff (!FIFO_IF.rst_n) (!FIFO_IF.wr_en || !(count < FIFO_IF.FIFO_DEPTH))  |-> ##1 (FIFO_IF.wr_ack == 0);
    90                                               endproperty
    91                                               wr_ack3_p: assert property (wr_ack3);
    92                                               wr_ack3_c: cover  property (wr_ack3);
    93                                               
    94                                               //overflow Assertions
    95                                               //immediate because the rst is async
    96              1                        316     always_comb begin  
    97                                               	if(!FIFO_IF.rst_n)
    98                                               	overflow1_p: assert final (FIFO_IF.overflow == 0);	
    99                                               end
    100                                              
    101                                              property overflow2;
    102                                               @(posedge FIFO_IF.clk) disable iff (!FIFO_IF.rst_n) (FIFO_IF.full && FIFO_IF.wr_en) |-> ##1 (FIFO_IF.overflow == 1);
    103                                              endproperty
    104                                              overflow2_p: assert property (overflow2);
    105                                              overflow2_c: cover  property (overflow2);
    106                                              
    107                                              property overflow3;
    108                                               @(posedge FIFO_IF.clk) disable iff (!FIFO_IF.rst_n) ((!FIFO_IF.full) && FIFO_IF.wr_en) |-> ##1 (FIFO_IF.overflow == 0);
    109                                              endproperty
    110                                              overflow3_p: assert property (overflow3);
    111                                              overflow3_c: cover  property (overflow3);
    112                                              
    113                                              //underflow Assertions
    114                                              //immediate because the rst is async
    115             1                         58     always_comb begin  

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         20        20         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/Assertions_inst --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                        count[3-0]           1           1      100.00 
                                       rd_ptr[2-0]           1           1      100.00 
                                       wr_ptr[2-0]           1           1      100.00 

Total Node Count     =         10 
Toggled Node Count   =         10 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (20 of 20 bins)

=================================================================================
=== Instance: /top/DUT
=== Design Unit: work.FIFO
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        25        25         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
------------------------------------IF Branch------------------------------------
    18                                      1039     Count coming in to IF
    18              1                         36     	if (!FIFO_IF.rst_n) begin
    23              1                        423     	else if (FIFO_IF.wr_en && count < FIFO_IF.FIFO_DEPTH) begin
    29              1                        580     	else begin 
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    31                                       580     Count coming in to IF
    31              1                        287     		if (FIFO_IF.full & FIFO_IF.wr_en)
    33              1                        293     		else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    39                                      1039     Count coming in to IF
    39              1                         36     	if (!FIFO_IF.rst_n) begin
    43              1                        303     	else if (FIFO_IF.rd_en && count != 0) begin
    48              1                        700     	else begin // modified
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    49                                       700     Count coming in to IF
    49              1                         12     		if (FIFO_IF.empty && FIFO_IF.rd_en) begin
    52              1                        688     		else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    59                                       874     Count coming in to IF
    59              1                         36     	if (!FIFO_IF.rst_n) begin
    62              1                        838     	else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    63                                       838     Count coming in to IF
    63              1                        296     		if	( ({FIFO_IF.wr_en, FIFO_IF.rd_en} == 2'b10) && !FIFO_IF.full) 
    65              1                         95     		else if ( ({FIFO_IF.wr_en, FIFO_IF.rd_en} == 2'b01) && !FIFO_IF.empty)
    67              1                         88     		else if (({FIFO_IF.wr_en, FIFO_IF.rd_en} == 2'b11) && FIFO_IF.full) begin // modified
    70              1                          7     		else if (({FIFO_IF.wr_en, FIFO_IF.rd_en} == 2'b11) && FIFO_IF.empty) begin // modified
                                             352     All False Count
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    76                                       504     Count coming in to IF
    76              1                        127     assign FIFO_IF.full = (count == FIFO_IF.FIFO_DEPTH)? 1 : 0;
    76              2                        377     assign FIFO_IF.full = (count == FIFO_IF.FIFO_DEPTH)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    77                                       504     Count coming in to IF
    77              1                         22     assign FIFO_IF.empty = (count == 0)? 1 : 0;
    77              2                        482     assign FIFO_IF.empty = (count == 0)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    78                                       504     Count coming in to IF
    78              1                        160     assign FIFO_IF.almostfull = (count == FIFO_IF.FIFO_DEPTH-1)? 1 : 0; /// modified (-2 => -1)
    78              2                        344     assign FIFO_IF.almostfull = (count == FIFO_IF.FIFO_DEPTH-1)? 1 : 0; /// modified (-2 => -1)
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    79                                       504     Count coming in to IF
    79              1                         27     assign FIFO_IF.almostempty = (count == 1)? 1 : 0;
    79              2                        477     assign FIFO_IF.almostempty = (count == 1)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      24        23         1    95.83%

================================Condition Details================================

Condition Coverage for instance /top/DUT --

  File FIFO.sv
----------------Focused Condition View-------------------
Line       23 Item    1  (FIFO_IF.wr_en && (count < FIFO_IF.FIFO_DEPTH))
Condition totals: 2 of 2 input terms covered = 100.00%

                    Input Term   Covered  Reason for no coverage   Hint
                   -----------  --------  -----------------------  --------------
                 FIFO_IF.wr_en         Y
  (count < FIFO_IF.FIFO_DEPTH)         Y

     Rows:       Hits  FEC Target                      Non-masking condition(s)      
 ---------  ---------  --------------------            -------------------------     
  Row   1:          1  FIFO_IF.wr_en_0                 -                             
  Row   2:          1  FIFO_IF.wr_en_1                 (count < FIFO_IF.FIFO_DEPTH)  
  Row   3:          1  (count < FIFO_IF.FIFO_DEPTH)_0  FIFO_IF.wr_en                 
  Row   4:          1  (count < FIFO_IF.FIFO_DEPTH)_1  FIFO_IF.wr_en                 

----------------Focused Condition View-------------------
Line       31 Item    1  (FIFO_IF.full & FIFO_IF.wr_en)
Condition totals: 1 of 2 input terms covered = 50.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
   FIFO_IF.full         N  '_0' not hit             Hit '_0'
  FIFO_IF.wr_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  FIFO_IF.full_0        FIFO_IF.wr_en                 
  Row   2:          1  FIFO_IF.full_1        FIFO_IF.wr_en                 
  Row   3:          1  FIFO_IF.wr_en_0       FIFO_IF.full                  
  Row   4:          1  FIFO_IF.wr_en_1       FIFO_IF.full                  

----------------Focused Condition View-------------------
Line       43 Item    1  (FIFO_IF.rd_en && (count != 0))
Condition totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_IF.rd_en         Y
   (count != 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_IF.rd_en_0       -                             
  Row   2:          1  FIFO_IF.rd_en_1       (count != 0)                  
  Row   3:          1  (count != 0)_0        FIFO_IF.rd_en                 
  Row   4:          1  (count != 0)_1        FIFO_IF.rd_en                 

----------------Focused Condition View-------------------
Line       49 Item    1  (FIFO_IF.empty && FIFO_IF.rd_en)
Condition totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_IF.empty         Y
  FIFO_IF.rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_IF.empty_0       -                             
  Row   2:          1  FIFO_IF.empty_1       FIFO_IF.rd_en                 
  Row   3:          1  FIFO_IF.rd_en_0       FIFO_IF.empty                 
  Row   4:          1  FIFO_IF.rd_en_1       FIFO_IF.empty                 

----------------Focused Condition View-------------------
Line       63 Item    1  ((~FIFO_IF.rd_en && FIFO_IF.wr_en) && ~FIFO_IF.full)
Condition totals: 3 of 3 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_IF.rd_en         Y
  FIFO_IF.wr_en         Y
   FIFO_IF.full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_IF.rd_en_0       (~FIFO_IF.full && FIFO_IF.wr_en)
  Row   2:          1  FIFO_IF.rd_en_1       -                             
  Row   3:          1  FIFO_IF.wr_en_0       ~FIFO_IF.rd_en                
  Row   4:          1  FIFO_IF.wr_en_1       (~FIFO_IF.full && ~FIFO_IF.rd_en)
  Row   5:          1  FIFO_IF.full_0        (~FIFO_IF.rd_en && FIFO_IF.wr_en)
  Row   6:          1  FIFO_IF.full_1        (~FIFO_IF.rd_en && FIFO_IF.wr_en)

----------------Focused Condition View-------------------
Line       65 Item    1  ((FIFO_IF.rd_en && ~FIFO_IF.wr_en) && ~FIFO_IF.empty)
Condition totals: 3 of 3 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_IF.rd_en         Y
  FIFO_IF.wr_en         Y
  FIFO_IF.empty         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_IF.rd_en_0       -                             
  Row   2:          1  FIFO_IF.rd_en_1       (~FIFO_IF.empty && ~FIFO_IF.wr_en)
  Row   3:          1  FIFO_IF.wr_en_0       (~FIFO_IF.empty && FIFO_IF.rd_en)
  Row   4:          1  FIFO_IF.wr_en_1       FIFO_IF.rd_en                 
  Row   5:          1  FIFO_IF.empty_0       (FIFO_IF.rd_en && ~FIFO_IF.wr_en)
  Row   6:          1  FIFO_IF.empty_1       (FIFO_IF.rd_en && ~FIFO_IF.wr_en)

----------------Focused Condition View-------------------
Line       67 Item    1  ((FIFO_IF.rd_en && FIFO_IF.wr_en) && FIFO_IF.full)
Condition totals: 3 of 3 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_IF.rd_en         Y
  FIFO_IF.wr_en         Y
   FIFO_IF.full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_IF.rd_en_0       -                             
  Row   2:          1  FIFO_IF.rd_en_1       (FIFO_IF.full && FIFO_IF.wr_en)
  Row   3:          1  FIFO_IF.wr_en_0       FIFO_IF.rd_en                 
  Row   4:          1  FIFO_IF.wr_en_1       (FIFO_IF.full && FIFO_IF.rd_en)
  Row   5:          1  FIFO_IF.full_0        (FIFO_IF.rd_en && FIFO_IF.wr_en)
  Row   6:          1  FIFO_IF.full_1        (FIFO_IF.rd_en && FIFO_IF.wr_en)

----------------Focused Condition View-------------------
Line       70 Item    1  ((FIFO_IF.rd_en && FIFO_IF.wr_en) && FIFO_IF.empty)
Condition totals: 3 of 3 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_IF.rd_en         Y
  FIFO_IF.wr_en         Y
  FIFO_IF.empty         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_IF.rd_en_0       -                             
  Row   2:          1  FIFO_IF.rd_en_1       (FIFO_IF.empty && FIFO_IF.wr_en)
  Row   3:          1  FIFO_IF.wr_en_0       FIFO_IF.rd_en                 
  Row   4:          1  FIFO_IF.wr_en_1       (FIFO_IF.empty && FIFO_IF.rd_en)
  Row   5:          1  FIFO_IF.empty_0       (FIFO_IF.rd_en && FIFO_IF.wr_en)
  Row   6:          1  FIFO_IF.empty_1       (FIFO_IF.rd_en && FIFO_IF.wr_en)

----------------Focused Condition View-------------------
Line       76 Item    1  (count == FIFO_IF.FIFO_DEPTH)
Condition totals: 1 of 1 input term covered = 100.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
  (count == FIFO_IF.FIFO_DEPTH)         Y

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:          1  (count == FIFO_IF.FIFO_DEPTH)_0  -                             
  Row   2:          1  (count == FIFO_IF.FIFO_DEPTH)_1  -                             

----------------Focused Condition View-------------------
Line       77 Item    1  (count == 0)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 0)_0        -                             
  Row   2:          1  (count == 0)_1        -                             

----------------Focused Condition View-------------------
Line       78 Item    1  (count == (FIFO_IF.FIFO_DEPTH - 1))
Condition totals: 1 of 1 input term covered = 100.00%

                           Input Term   Covered  Reason for no coverage   Hint
                          -----------  --------  -----------------------  --------------
  (count == (FIFO_IF.FIFO_DEPTH - 1))         Y

     Rows:       Hits  FEC Target                             Non-masking condition(s)      
 ---------  ---------  --------------------                   -------------------------     
  Row   1:          1  (count == (FIFO_IF.FIFO_DEPTH - 1))_0  -                             
  Row   2:          1  (count == (FIFO_IF.FIFO_DEPTH - 1))_1  -                             

----------------Focused Condition View-------------------
Line       79 Item    1  (count == 1)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 1)_0        -                             
  Row   2:          1  (count == 1)_1        -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      29        29         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
    8                                                module FIFO(FIFO_Interface.DUT FIFO_IF);
    9                                                 
    10                                               localparam max_fifo_addr = FIFO_IF.max_fifo_addr;
    11                                               
    12                                               reg [FIFO_IF.FIFO_WIDTH-1:0] mem [FIFO_IF.FIFO_DEPTH-1:0];
    13                                               
    14                                               reg [max_fifo_addr-1:0] wr_ptr, rd_ptr;
    15                                               reg [max_fifo_addr:0] count;
    16                                               
    17              1                       1039     always @(posedge FIFO_IF.clk or negedge FIFO_IF.rst_n) begin
    18                                               	if (!FIFO_IF.rst_n) begin
    19              1                         36     		wr_ptr <= 0;
    20              1                         36     		FIFO_IF.wr_ack <= 0; // modified
    21              1                         36     		FIFO_IF.overflow <= 0; // modified
    22                                               	end
    23                                               	else if (FIFO_IF.wr_en && count < FIFO_IF.FIFO_DEPTH) begin
    24              1                        423     		mem[wr_ptr] <= FIFO_IF.data_in;
    25              1                        423     		FIFO_IF.wr_ack <= 1;
    26              1                        423     		wr_ptr <= wr_ptr + 1;
    27              1                        423     		FIFO_IF.overflow <= 0; // modified
    28                                               	end
    29                                               	else begin 
    30              1                        580     		FIFO_IF.wr_ack <= 0; 
    31                                               		if (FIFO_IF.full & FIFO_IF.wr_en)
    32              1                        287     			FIFO_IF.overflow <= 1;
    33                                               		else
    34              1                        293     			FIFO_IF.overflow <= 0;
    35                                               	end
    36                                               end
    37                                               
    38              1                       1039     always @(posedge FIFO_IF.clk or negedge FIFO_IF.rst_n) begin
    39                                               	if (!FIFO_IF.rst_n) begin
    40              1                         36     		rd_ptr <= 0;
    41              1                         36     		FIFO_IF.underflow<=0; // modified
    42                                               	end
    43                                               	else if (FIFO_IF.rd_en && count != 0) begin
    44              1                        303     		FIFO_IF.data_out <= mem[rd_ptr];
    45              1                        303     		rd_ptr <= rd_ptr + 1;
    46              1                        303     		FIFO_IF.underflow<=0; // modified
    47                                               	end
    48                                               	else begin // modified
    49                                               		if (FIFO_IF.empty && FIFO_IF.rd_en) begin
    50              1                         12     			FIFO_IF.underflow<=1;
    51                                               		end
    52                                               		else begin
    53              1                        688     			FIFO_IF.underflow<=0;
    54                                               		end
    55                                               	end
    56                                               end
    57                                               
    58              1                        874     always @(posedge FIFO_IF.clk or negedge FIFO_IF.rst_n) begin
    59                                               	if (!FIFO_IF.rst_n) begin
    60              1                         36     		count <= 0;
    61                                               	end
    62                                               	else begin
    63                                               		if	( ({FIFO_IF.wr_en, FIFO_IF.rd_en} == 2'b10) && !FIFO_IF.full) 
    64              1                        296     			count <= count + 1;
    65                                               		else if ( ({FIFO_IF.wr_en, FIFO_IF.rd_en} == 2'b01) && !FIFO_IF.empty)
    66              1                         95     			count <= count - 1;
    67                                               		else if (({FIFO_IF.wr_en, FIFO_IF.rd_en} == 2'b11) && FIFO_IF.full) begin // modified
    68              1                         88     			count <= count - 1;
    69                                               		end
    70                                               		else if (({FIFO_IF.wr_en, FIFO_IF.rd_en} == 2'b11) && FIFO_IF.empty) begin // modified
    71              1                          7     			count <= count + 1;
    72                                               		end
    73                                               	end
    74                                               end
    75                                               
    76              1                        505     assign FIFO_IF.full = (count == FIFO_IF.FIFO_DEPTH)? 1 : 0;
    77              1                        505     assign FIFO_IF.empty = (count == 0)? 1 : 0;
    78              1                        505     assign FIFO_IF.almostfull = (count == FIFO_IF.FIFO_DEPTH-1)? 1 : 0; /// modified (-2 => -1)
    79              1                        505     assign FIFO_IF.almostempty = (count == 1)? 1 : 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         20        20         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                        count[3-0]           1           1      100.00 
                                       rd_ptr[2-0]           1           1      100.00 
                                       wr_ptr[2-0]           1           1      100.00 

Total Node Count     =         10 
Toggled Node Count   =         10 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (20 of 20 bins)

=================================================================================
=== Instance: /top
=== Design Unit: work.top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       6         6         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File top.sv
    5                                                module top();
    6                                                
    7                                                bit clk;
    8                                                initial begin
    9               1                          1         clk=0;
    10              1                          1         forever 
    11              1                       2043         #1 clk=~clk;
    11              2                       2042     
    12                                               end
    13                                                   FIFO_Interface FIFO_IF (clk);
    14                                                   FIFO           DUT (FIFO_IF);
    15                                                   bind           FIFO Assertions Assertions_inst (FIFO_IF);
    16                                               
    17                                               
    18                                                   initial begin
    19              1                          1             uvm_config_db#(virtual FIFO_Interface) :: set (null , "uvm_test_top","FIFO_if",FIFO_IF);
    20              1                          1             run_test ("FIFO_test_class");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /FIFO_seq_item_pkg
=== Design Unit: work.FIFO_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_seq_item.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***     `uvm_object_utils (FIFO_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                       1021     Count coming in to IF
    6               2                    ***0***     `uvm_object_utils (FIFO_seq_item)
                                            1021     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***     `uvm_object_utils (FIFO_seq_item)
    6               4                    ***0***     `uvm_object_utils (FIFO_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                       1021     Count coming in to IF
    6               5                    ***0***     `uvm_object_utils (FIFO_seq_item)
                                            1021     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***     `uvm_object_utils (FIFO_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_seq_item_pkg --

  File FIFO_seq_item.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         5        10    33.33%

================================Statement Details================================

Statement Coverage for instance /FIFO_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_seq_item.sv
    1                                                package FIFO_seq_item_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                class FIFO_seq_item extends uvm_sequence_item;
    5                                                
    6               1                    ***0***     `uvm_object_utils (FIFO_seq_item)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                       1021     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                       1021     
    6              10                    ***0***     
    7                                                parameter FIFO_WIDTH = 16;
    8                                                parameter FIFO_DEPTH = 8;
    9                                                
    10                                               rand bit [FIFO_WIDTH-1:0] data_in;
    11                                               rand bit rst_n, wr_en, rd_en;
    12                                               
    13                                               bit [FIFO_WIDTH-1:0] data_out;
    14                                               bit wr_ack, overflow,underflow; 
    15                                               bit full, empty, almostfull, almostempty ;
    16                                               
    17              1                       3065     int RD_EN_ON_DIST=30,WR_EN_ON_DIST=70;
    17              2                       3065     
    18                                               function new (string name ="FIFO_seq_item");
    19              1                       3065       super.new (name);
    20                                                   
    21                                               endfunction
    22                                               
    23                                               constraint RST {
    24                                                   rst_n dist {0:=2, 1:=98};
    25                                               }
    26                                               
    27                                               constraint write_enable_dist {
    28                                                   wr_en dist {1:=WR_EN_ON_DIST, 0:=(100-WR_EN_ON_DIST)};
    29                                               }
    30                                               
    31                                               constraint read_enable_dist {
    32                                                   rd_en dist {1:=RD_EN_ON_DIST, 0:=(100-RD_EN_ON_DIST)};
    33                                               }
    34                                               
    35                                               
    36                                               function string convert2string ();
    37              1                    ***0***         return $sformatf("%s rst_n=0b%0b ,data_in=0h%0h ,wr_en=0b%0b, rd_en=0b%0b ,data_out=0h%0h, wr_ack=0b%0b, overflow=0b%0b, underflow=0b%0b , full=0b%0b, empty=0b%0b,almostfull=0b%0b, almostempty=0b%0b ",super.convert2string (), rst_n,data_in, wr_en, rd_en,data_out,wr_ack, overflow,underflow,full, empty, almostfull, almostempty);
    38                                               endfunction
    39                                                   
    40                                               
    41                                               function string convert2string_stimulus ();
    42              1                    ***0***         return $sformatf("rst_n=0b%0b ,data_in=0h%0h ,wr_en=0b%0b, rd_en=0b%0b ,data_out=0h%0h, wr_ack=0b%0b, overflow=0b%0b, underflow=0b%0b , full=0b%0b, empty=0b%0b,almostfull=0b%0b, almostempty=0b%0b ",rst_n,data_in, wr_en, rd_en,data_out,wr_ack, overflow,underflow,full, empty, almostfull, almostempty);


=================================================================================
=== Instance: /FIFO_sequence_pkg
=== Design Unit: work.FIFO_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       3         3         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_sequence_pkg/write_only_sequence/body/#ublk#38615015#40/immed__43
                     FIFO_sequence.sv(43)               0          1
/FIFO_sequence_pkg/read_only_sequence/body/#ublk#38615015#62/immed__65
                     FIFO_sequence.sv(65)               0          1
/FIFO_sequence_pkg/write_read_sequence/body/#ublk#38615015#85/immed__88
                     FIFO_sequence.sv(88)               0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        40         8        32    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_sequence.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***     `uvm_object_utils (FIFO_sequence_reset)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                          1     Count coming in to IF
    7               2                    ***0***     `uvm_object_utils (FIFO_sequence_reset)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***     `uvm_object_utils (FIFO_sequence_reset)
    7               4                    ***0***     `uvm_object_utils (FIFO_sequence_reset)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                          1     Count coming in to IF
    7               5                    ***0***     `uvm_object_utils (FIFO_sequence_reset)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***     `uvm_object_utils (FIFO_sequence_reset)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    30                                   ***0***     Count coming in to IF
    30              1                    ***0***     `uvm_object_utils (write_only_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    30                                         1     Count coming in to IF
    30              2                    ***0***     `uvm_object_utils (write_only_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    30                                   ***0***     Count coming in to IF
    30              3                    ***0***     `uvm_object_utils (write_only_sequence)
    30              4                    ***0***     `uvm_object_utils (write_only_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    30                                         1     Count coming in to IF
    30              5                    ***0***     `uvm_object_utils (write_only_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    30                                   ***0***     Count coming in to IF
    30              6                    ***0***     `uvm_object_utils (write_only_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52              1                    ***0***     `uvm_object_utils (read_only_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                         1     Count coming in to IF
    52              2                    ***0***     `uvm_object_utils (read_only_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52              3                    ***0***     `uvm_object_utils (read_only_sequence)
    52              4                    ***0***     `uvm_object_utils (read_only_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                         1     Count coming in to IF
    52              5                    ***0***     `uvm_object_utils (read_only_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52              6                    ***0***     `uvm_object_utils (read_only_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    74                                   ***0***     Count coming in to IF
    74              1                    ***0***     `uvm_object_utils (write_read_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    74                                         1     Count coming in to IF
    74              2                    ***0***     `uvm_object_utils (write_read_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    74                                   ***0***     Count coming in to IF
    74              3                    ***0***     `uvm_object_utils (write_read_sequence)
    74              4                    ***0***     `uvm_object_utils (write_read_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    74                                         1     Count coming in to IF
    74              5                    ***0***     `uvm_object_utils (write_read_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    74                                   ***0***     Count coming in to IF
    74              6                    ***0***     `uvm_object_utils (write_read_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       8         0         8     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_sequence_pkg --

  File FIFO_sequence.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       30 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       30 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       52 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       52 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       74 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       74 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      63        31        32    49.20%

================================Statement Details================================

Statement Coverage for instance /FIFO_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_sequence.sv
    1                                                package FIFO_sequence_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import FIFO_seq_item_pkg::*;
    5                                                class FIFO_sequence_reset extends uvm_sequence #(FIFO_seq_item);
    6                                                
    7               1                    ***0***     `uvm_object_utils (FIFO_sequence_reset)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                          1     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                          1     
    7              10                    ***0***     
    8                                                FIFO_seq_item seq_item;
    9                                                
    10                                               function new (string name ="FIFO_sequence_reset");
    11              1                          1       super.new (name);
    12                                                   
    13                                               endfunction
    14                                               
    15                                               task body;
    16              1                          1       seq_item =   FIFO_seq_item :: type_id :: create ("seq_item");
    17              1                          1       start_item (seq_item);
    18              1                          1       seq_item.rst_n=0;
    19              1                          1       seq_item.data_in=0;
    20              1                          1       seq_item.wr_en=0;
    21              1                          1       seq_item.rd_en=0;
    22              1                          1       finish_item(seq_item);
    23                                               endtask
    24                                                   
    25                                               endclass
    26                                               
    27                                               
    28                                               class write_only_sequence extends uvm_sequence #(FIFO_seq_item);
    29                                               
    30              1                    ***0***     `uvm_object_utils (write_only_sequence)
    30              2                    ***0***     
    30              3                    ***0***     
    30              4                    ***0***     
    30              5                    ***0***     
    30              6                          1     
    30              7                    ***0***     
    30              8                    ***0***     
    30              9                          1     
    30             10                    ***0***     
    31                                               FIFO_seq_item seq_item;
    32                                               
    33                                               function new (string name ="write_only_sequence");
    34              1                          1       super.new (name);
    35                                                   
    36                                               endfunction
    37                                               
    38                                               task body;
    39                                               // write only sequence
    40              1                         10     repeat (10) begin
    41              1                         10       seq_item =   FIFO_seq_item :: type_id :: create ("seq_item");
    42              1                         10       start_item (seq_item);
    43                                                 assert (seq_item.randomize() with {seq_item.wr_en==1; seq_item.rd_en==0;});
    44              1                         10       finish_item(seq_item);  
    45                                               end
    46                                               
    47                                               endtask
    48                                               endclass
    49                                               
    50                                               class read_only_sequence extends uvm_sequence #(FIFO_seq_item);
    51                                               
    52              1                    ***0***     `uvm_object_utils (read_only_sequence)
    52              2                    ***0***     
    52              3                    ***0***     
    52              4                    ***0***     
    52              5                    ***0***     
    52              6                          1     
    52              7                    ***0***     
    52              8                    ***0***     
    52              9                          1     
    52             10                    ***0***     
    53                                               FIFO_seq_item seq_item;
    54                                               
    55                                               function new (string name ="read_only_sequence");
    56              1                          1       super.new (name);
    57                                                   
    58                                               endfunction
    59                                               
    60                                               task body;
    61                                               // read only sequence
    62              1                         10     repeat (10) begin
    63              1                         10       seq_item =   FIFO_seq_item :: type_id :: create ("seq_item");
    64              1                         10       start_item (seq_item);
    65                                                 assert (seq_item.randomize() with {seq_item.wr_en==0; seq_item.rd_en==1;});
    66              1                         10       finish_item(seq_item);  
    67                                               end
    68                                               
    69                                               endtask
    70                                               endclass
    71                                               
    72                                               class write_read_sequence extends uvm_sequence #(FIFO_seq_item);
    73                                               
    74              1                    ***0***     `uvm_object_utils (write_read_sequence)
    74              2                    ***0***     
    74              3                    ***0***     
    74              4                    ***0***     
    74              5                    ***0***     
    74              6                          1     
    74              7                    ***0***     
    74              8                    ***0***     
    74              9                          1     
    74             10                    ***0***     
    75                                               FIFO_seq_item seq_item;
    76                                               
    77                                               function new (string name ="write_read_sequence");
    78              1                          1       super.new (name);
    79                                                   
    80                                               endfunction
    81                                               
    82                                               task body;
    83                                               
    84                                               // write read sequence
    85              1                       1000     repeat (1000) begin
    86              1                       1000       seq_item =   FIFO_seq_item :: type_id :: create ("seq_item");
    87              1                       1000       start_item (seq_item);
    88                                                 assert (seq_item.randomize());
    89              1                       1000       finish_item(seq_item);  


=================================================================================
=== Instance: /FIFO_score_pkg
=== Design Unit: work.FIFO_score_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        28        22         6    78.57%

================================Branch Details================================

Branch Coverage for instance /FIFO_score_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_score.sv
------------------------------------IF Branch------------------------------------
    44                                      1021     Count coming in to IF
    44              1                    ***0***                 if(seq_item.data_out !== data_out_ref || seq_item.wr_ack !== wr_ack_ref|| seq_item.overflow !== overflow_ref|| seq_item.underflow !== underflow_ref|| seq_item.full !== full_ref|| seq_item.empty !== empty_ref|| seq_item.almostfull !== almostfull_ref|| seq_item.almostempty !== almostempty_ref) begin
    48              1                       1021                 else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    45                                   ***0***     Count coming in to IF
    45              1                    ***0***                     `uvm_error("run_phase",$sformatf("Comparsion failed, Transaction received by the dut: %s while the data_out_ref: 0b%0h  while the wr_ack_ref: 0b%0b while the overflow_ref: 0b%0b while the underflow_ref: 0b%0b while the full_ref: 0b%0b while the empty_ref: 0b%0b while the almostfull_ref: 0b%0b while the almostempty_ref: 0b%0b",seq_item.convert2string(),data_out_ref,wr_ack_ref, overflow_ref,underflow_ref,full_ref, empty_ref, almostfull_ref, almostempty_ref));
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    49                                      1021     Count coming in to IF
    49              1                    ***0***                     `uvm_info("run_phase",$sformatf("Correct Shift reg out: %s",seq_item.convert2string()),UVM_HIGH);
                                            1021     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    57                                      1021     Count coming in to IF
    57              1                         18     if (!seq_item_chk.rst_n) begin
    61              1                        423     	else if (seq_item_chk.wr_en && !full_ref) begin
    66              1                        580     	else begin 
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    68                                       580     Count coming in to IF
    68              1                        287     		if (full_ref & seq_item_chk.wr_en)
    70              1                        293     		else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    74                                      1021     Count coming in to IF
    74              1                         18         if (!seq_item_chk.rst_n) begin
    78              1                        303     	else if (seq_item_chk.rd_en && !empty_ref) begin
    82              1                        700     	else begin 
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    83                                       700     Count coming in to IF
    83              1                         12     		if (empty_ref && seq_item_chk.rd_en) begin
    86              1                        688     		else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    92                                      1021     Count coming in to IF
    92              1                        402         full_ref        = (queue_check.size() == seq_item_chk.FIFO_DEPTH)? 1 : 0;
    92              2                        619         full_ref        = (queue_check.size() == seq_item_chk.FIFO_DEPTH)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    93                                      1021     Count coming in to IF
    93              1                         30         empty_ref       = (queue_check.size() == 0)? 1 : 0;
    93              2                        991         empty_ref       = (queue_check.size() == 0)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    94                                      1021     Count coming in to IF
    94              1                        276         almostfull_ref  = (queue_check.size() == seq_item_chk.FIFO_DEPTH-1)? 1 : 0; 
    94              2                        745         almostfull_ref  = (queue_check.size() == seq_item_chk.FIFO_DEPTH-1)? 1 : 0; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    95                                      1021     Count coming in to IF
    95              1                         46         almostempty_ref = (queue_check.size() == 1)? 1 : 0;
    95              2                        975         almostempty_ref = (queue_check.size() == 1)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    102                                        1     Count coming in to IF
    102             1                          1         `uvm_info("report_phase",$sformatf("Total successful Transaction: %0d",correct_count),UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    103                                        1     Count coming in to IF
    103             1                          1         `uvm_info("report_phase",$sformatf("Total Failed Transaction: %0d",error_count),UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      20        11         9    55.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_score_pkg --

  File FIFO_score.sv
----------------Focused Condition View-------------------
Line       44 Item    1  ((this.seq_item.data_out !== this.data_out_ref) || (this.seq_item.wr_ack !== this.wr_ack_ref) || (this.seq_item.overflow !== this.overflow_ref) || (this.seq_item.underflow !== this.underflow_ref) || (this.seq_item.full !== this.full_ref) || (this.seq_item.empty !== this.empty_ref) || (this.seq_item.almostfull !== this.almostfull_ref) || (this.seq_item.almostempty !== this.almostempty_ref))
Condition totals: 0 of 8 input terms covered = 0.00%

                                            Input Term   Covered  Reason for no coverage   Hint
                                           -----------  --------  -----------------------  --------------
        (this.seq_item.data_out !== this.data_out_ref)         N  '_1' not hit             Hit '_1'
            (this.seq_item.wr_ack !== this.wr_ack_ref)         N  '_1' not hit             Hit '_1'
        (this.seq_item.overflow !== this.overflow_ref)         N  '_1' not hit             Hit '_1'
      (this.seq_item.underflow !== this.underflow_ref)         N  '_1' not hit             Hit '_1'
                (this.seq_item.full !== this.full_ref)         N  '_1' not hit             Hit '_1'
              (this.seq_item.empty !== this.empty_ref)         N  '_1' not hit             Hit '_1'
    (this.seq_item.almostfull !== this.almostfull_ref)         N  '_1' not hit             Hit '_1'
  (this.seq_item.almostempty !== this.almostempty_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                              Non-masking condition(s)      
 ---------  ---------  --------------------                                    -------------------------     
  Row   1:          1  (this.seq_item.data_out !== this.data_out_ref)_0        ~((this.seq_item.wr_ack !== this.wr_ack_ref) || ((this.seq_item.overflow !== this.overflow_ref) || ((this.seq_item.underflow !== this.underflow_ref) || ((this.seq_item.full !== this.full_ref) || ((this.seq_item.empty !== this.empty_ref) || ((this.seq_item.almostfull !== this.almostfull_ref) || (this.seq_item.almostempty !== this.almostempty_ref)))))))
  Row   2:    ***0***  (this.seq_item.data_out !== this.data_out_ref)_1        -                             
  Row   3:          1  (this.seq_item.wr_ack !== this.wr_ack_ref)_0            (~(this.seq_item.data_out !== this.data_out_ref) && ~((this.seq_item.overflow !== this.overflow_ref) || ((this.seq_item.underflow !== this.underflow_ref) || ((this.seq_item.full !== this.full_ref) || ((this.seq_item.empty !== this.empty_ref) || ((this.seq_item.almostfull !== this.almostfull_ref) || (this.seq_item.almostempty !== this.almostempty_ref)))))))
  Row   4:    ***0***  (this.seq_item.wr_ack !== this.wr_ack_ref)_1            ~(this.seq_item.data_out !== this.data_out_ref)
  Row   5:          1  (this.seq_item.overflow !== this.overflow_ref)_0        (~(this.seq_item.data_out !== this.data_out_ref) && ~(this.seq_item.wr_ack !== this.wr_ack_ref) && ~((this.seq_item.underflow !== this.underflow_ref) || ((this.seq_item.full !== this.full_ref) || ((this.seq_item.empty !== this.empty_ref) || ((this.seq_item.almostfull !== this.almostfull_ref) || (this.seq_item.almostempty !== this.almostempty_ref))))))
  Row   6:    ***0***  (this.seq_item.overflow !== this.overflow_ref)_1        (~(this.seq_item.data_out !== this.data_out_ref) && ~(this.seq_item.wr_ack !== this.wr_ack_ref))
  Row   7:          1  (this.seq_item.underflow !== this.underflow_ref)_0      (~(this.seq_item.data_out !== this.data_out_ref) && ~(this.seq_item.wr_ack !== this.wr_ack_ref) && ~(this.seq_item.overflow !== this.overflow_ref) && ~((this.seq_item.full !== this.full_ref) || ((this.seq_item.empty !== this.empty_ref) || ((this.seq_item.almostfull !== this.almostfull_ref) || (this.seq_item.almostempty !== this.almostempty_ref)))))
  Row   8:    ***0***  (this.seq_item.underflow !== this.underflow_ref)_1      (~(this.seq_item.data_out !== this.data_out_ref) && ~(this.seq_item.wr_ack !== this.wr_ack_ref) && ~(this.seq_item.overflow !== this.overflow_ref))
  Row   9:          1  (this.seq_item.full !== this.full_ref)_0                (~(this.seq_item.data_out !== this.data_out_ref) && ~(this.seq_item.wr_ack !== this.wr_ack_ref) && ~(this.seq_item.overflow !== this.overflow_ref) && ~(this.seq_item.underflow !== this.underflow_ref) && ~((this.seq_item.empty !== this.empty_ref) || ((this.seq_item.almostfull !== this.almostfull_ref) || (this.seq_item.almostempty !== this.almostempty_ref))))
 Row   10:    ***0***  (this.seq_item.full !== this.full_ref)_1                (~(this.seq_item.data_out !== this.data_out_ref) && ~(this.seq_item.wr_ack !== this.wr_ack_ref) && ~(this.seq_item.overflow !== this.overflow_ref) && ~(this.seq_item.underflow !== this.underflow_ref))
 Row   11:          1  (this.seq_item.empty !== this.empty_ref)_0              (~(this.seq_item.data_out !== this.data_out_ref) && ~(this.seq_item.wr_ack !== this.wr_ack_ref) && ~(this.seq_item.overflow !== this.overflow_ref) && ~(this.seq_item.underflow !== this.underflow_ref) && ~(this.seq_item.full !== this.full_ref) && ~((this.seq_item.almostfull !== this.almostfull_ref) || (this.seq_item.almostempty !== this.almostempty_ref)))
 Row   12:    ***0***  (this.seq_item.empty !== this.empty_ref)_1              (~(this.seq_item.data_out !== this.data_out_ref) && ~(this.seq_item.wr_ack !== this.wr_ack_ref) && ~(this.seq_item.overflow !== this.overflow_ref) && ~(this.seq_item.underflow !== this.underflow_ref) && ~(this.seq_item.full !== this.full_ref))
 Row   13:          1  (this.seq_item.almostfull !== this.almostfull_ref)_0    (~(this.seq_item.data_out !== this.data_out_ref) && ~(this.seq_item.wr_ack !== this.wr_ack_ref) && ~(this.seq_item.overflow !== this.overflow_ref) && ~(this.seq_item.underflow !== this.underflow_ref) && ~(this.seq_item.full !== this.full_ref) && ~(this.seq_item.empty !== this.empty_ref) && ~(this.seq_item.almostempty !== this.almostempty_ref))
 Row   14:    ***0***  (this.seq_item.almostfull !== this.almostfull_ref)_1    (~(this.seq_item.data_out !== this.data_out_ref) && ~(this.seq_item.wr_ack !== this.wr_ack_ref) && ~(this.seq_item.overflow !== this.overflow_ref) && ~(this.seq_item.underflow !== this.underflow_ref) && ~(this.seq_item.full !== this.full_ref) && ~(this.seq_item.empty !== this.empty_ref))
 Row   15:          1  (this.seq_item.almostempty !== this.almostempty_ref)_0  (~(this.seq_item.data_out !== this.data_out_ref) && ~(this.seq_item.wr_ack !== this.wr_ack_ref) && ~(this.seq_item.overflow !== this.overflow_ref) && ~(this.seq_item.underflow !== this.underflow_ref) && ~(this.seq_item.full !== this.full_ref) && ~(this.seq_item.empty !== this.empty_ref) && ~(this.seq_item.almostfull !== this.almostfull_ref))
 Row   16:    ***0***  (this.seq_item.almostempty !== this.almostempty_ref)_1  (~(this.seq_item.data_out !== this.data_out_ref) && ~(this.seq_item.wr_ack !== this.wr_ack_ref) && ~(this.seq_item.overflow !== this.overflow_ref) && ~(this.seq_item.underflow !== this.underflow_ref) && ~(this.seq_item.full !== this.full_ref) && ~(this.seq_item.empty !== this.empty_ref) && ~(this.seq_item.almostfull !== this.almostfull_ref))

----------------Focused Condition View-------------------
Line       61 Item    1  (seq_item_chk.wr_en && ~this.full_ref)
Condition totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  seq_item_chk.wr_en         Y
       this.full_ref         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  seq_item_chk.wr_en_0  -                             
  Row   2:          1  seq_item_chk.wr_en_1  ~this.full_ref                
  Row   3:          1  this.full_ref_0       seq_item_chk.wr_en            
  Row   4:          1  this.full_ref_1       seq_item_chk.wr_en            

----------------Focused Condition View-------------------
Line       68 Item    1  (this.full_ref & seq_item_chk.wr_en)
Condition totals: 1 of 2 input terms covered = 50.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
       this.full_ref         N  '_0' not hit             Hit '_0'
  seq_item_chk.wr_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  this.full_ref_0       seq_item_chk.wr_en            
  Row   2:          1  this.full_ref_1       seq_item_chk.wr_en            
  Row   3:          1  seq_item_chk.wr_en_0  this.full_ref                 
  Row   4:          1  seq_item_chk.wr_en_1  this.full_ref                 

----------------Focused Condition View-------------------
Line       78 Item    1  (seq_item_chk.rd_en && ~this.empty_ref)
Condition totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  seq_item_chk.rd_en         Y
      this.empty_ref         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  seq_item_chk.rd_en_0  -                             
  Row   2:          1  seq_item_chk.rd_en_1  ~this.empty_ref               
  Row   3:          1  this.empty_ref_0      seq_item_chk.rd_en            
  Row   4:          1  this.empty_ref_1      seq_item_chk.rd_en            

----------------Focused Condition View-------------------
Line       83 Item    1  (this.empty_ref && seq_item_chk.rd_en)
Condition totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
      this.empty_ref         Y
  seq_item_chk.rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.empty_ref_0      -                             
  Row   2:          1  this.empty_ref_1      seq_item_chk.rd_en            
  Row   3:          1  seq_item_chk.rd_en_0  this.empty_ref                
  Row   4:          1  seq_item_chk.rd_en_1  this.empty_ref                

----------------Focused Condition View-------------------
Line       92 Item    1  (size(this.queue_check) == 8)
Condition totals: 1 of 1 input term covered = 100.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
  (size(this.queue_check) == 8)         Y

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:          1  (size(this.queue_check) == 8)_0  -                             
  Row   2:          1  (size(this.queue_check) == 8)_1  -                             

----------------Focused Condition View-------------------
Line       93 Item    1  (size(this.queue_check) == 0)
Condition totals: 1 of 1 input term covered = 100.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
  (size(this.queue_check) == 0)         Y

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:          1  (size(this.queue_check) == 0)_0  -                             
  Row   2:          1  (size(this.queue_check) == 0)_1  -                             

----------------Focused Condition View-------------------
Line       94 Item    1  (size(this.queue_check) == (8 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

                           Input Term   Covered  Reason for no coverage   Hint
                          -----------  --------  -----------------------  --------------
  (size(this.queue_check) == (8 - 1))         Y

     Rows:       Hits  FEC Target                             Non-masking condition(s)      
 ---------  ---------  --------------------                   -------------------------     
  Row   1:          1  (size(this.queue_check) == (8 - 1))_0  -                             
  Row   2:          1  (size(this.queue_check) == (8 - 1))_1  -                             

----------------Focused Condition View-------------------
Line       95 Item    1  (size(this.queue_check) == 1)
Condition totals: 1 of 1 input term covered = 100.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
  (size(this.queue_check) == 1)         Y

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:          1  (size(this.queue_check) == 1)_0  -                             
  Row   2:          1  (size(this.queue_check) == 1)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      40        35         5    87.50%

================================Statement Details================================

Statement Coverage for instance /FIFO_score_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_score.sv
    1                                                package FIFO_score_pkg;
    2                                                   import FIFO_seq_item_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                
    6                                                class FIFO_score extends uvm_scoreboard;
    7               1                    ***0***         `uvm_component_utils (FIFO_score)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                    FIFO_seq_item seq_item;
    10                                                   uvm_analysis_export #(FIFO_seq_item) sb_export;
    11                                                   uvm_tlm_analysis_fifo #(FIFO_seq_item) sb_fifo;
    12                                               
    13                                               parameter FIFO_WIDTH = 16;
    14                                               parameter FIFO_DEPTH = 8;
    15                                               
    16                                               bit [FIFO_WIDTH-1:0] data_out_ref;
    17                                               bit wr_ack_ref, overflow_ref,underflow_ref; 
    18                                               bit full_ref, empty_ref, almostfull_ref, almostempty_ref ;
    19                                               int queue_check[$];
    20                                               
    21              1                          1     int error_count =0;
    22              1                          1     int correct_count =0;
    23                                                       
    24                                               function new (string name ="FIFO_score", uvm_component parent = null);
    25              1                          1         super.new (name,parent);  
    26                                               endfunction
    27                                               
    28                                               function void build_phase(uvm_phase phase);
    29              1                          1         super.build_phase(phase);
    30              1                          1         sb_export = new("sb_export",this);
    31              1                          1         sb_fifo = new("sb_fifo",this);
    32                                               endfunction
    33                                               
    34                                               function void connect_phase(uvm_phase phase);
    35              1                          1         super.connect_phase(phase);
    36              1                          1         sb_export.connect(sb_fifo.analysis_export);
    37                                               endfunction
    38                                               
    39                                               task run_phase(uvm_phase phase);
    40              1                          1         super.run_phase(phase);
    41              1                          1         forever begin
    42              1                       1022             sb_fifo.get(seq_item);
    43              1                       1021             ref_model(seq_item);
    44                                                           if(seq_item.data_out !== data_out_ref || seq_item.wr_ack !== wr_ack_ref|| seq_item.overflow !== overflow_ref|| seq_item.underflow !== underflow_ref|| seq_item.full !== full_ref|| seq_item.empty !== empty_ref|| seq_item.almostfull !== almostfull_ref|| seq_item.almostempty !== almostempty_ref) begin
    45              1                    ***0***                     `uvm_error("run_phase",$sformatf("Comparsion failed, Transaction received by the dut: %s while the data_out_ref: 0b%0h  while the wr_ack_ref: 0b%0b while the overflow_ref: 0b%0b while the underflow_ref: 0b%0b while the full_ref: 0b%0b while the empty_ref: 0b%0b while the almostfull_ref: 0b%0b while the almostempty_ref: 0b%0b",seq_item.convert2string(),data_out_ref,wr_ack_ref, overflow_ref,underflow_ref,full_ref, empty_ref, almostfull_ref, almostempty_ref));
    46              1                    ***0***                     error_count++;
    47                                                           end
    48                                                           else begin
    49              1                    ***0***                     `uvm_info("run_phase",$sformatf("Correct Shift reg out: %s",seq_item.convert2string()),UVM_HIGH);
    50              1                       1021                     correct_count++;
    51                                                           end
    52                                                               end
    53                                               endtask
    54                                               
    55                                               task ref_model(FIFO_seq_item seq_item_chk);
    56                                               
    57                                               if (!seq_item_chk.rst_n) begin
    58              1                         18     		wr_ack_ref = 0; 
    59              1                         18     		overflow_ref = 0; 
    60                                               	end
    61                                               	else if (seq_item_chk.wr_en && !full_ref) begin
    62              1                        423     		queue_check.push_front(seq_item_chk.data_in);
    63              1                        423     		wr_ack_ref = 1;
    64              1                        423         overflow_ref = 0;
    65                                               	end
    66                                               	else begin 
    67              1                        580     		wr_ack_ref = 0; 
    68                                               		if (full_ref & seq_item_chk.wr_en)
    69              1                        287     			overflow_ref = 1;
    70                                               		else
    71              1                        293     			overflow_ref = 0;
    72                                               	end
    73                                               
    74                                                   if (!seq_item_chk.rst_n) begin
    75              1                         18     		underflow_ref=0; 
    76              1                         18         queue_check.delete();
    77                                               	end
    78                                               	else if (seq_item_chk.rd_en && !empty_ref) begin
    79              1                        303     		data_out_ref = queue_check.pop_back();
    80              1                        303         underflow_ref=0; 
    81                                               	end
    82                                               	else begin 
    83                                               		if (empty_ref && seq_item_chk.rd_en) begin
    84              1                         12     			underflow_ref =1;
    85                                               		end
    86                                               		else begin
    87              1                        688     			underflow_ref =0;
    88                                               		end
    89                                               	end
    90                                               
    91                                                
    92              1                       1021         full_ref        = (queue_check.size() == seq_item_chk.FIFO_DEPTH)? 1 : 0;
    93              1                       1021         empty_ref       = (queue_check.size() == 0)? 1 : 0;
    94              1                       1021         almostfull_ref  = (queue_check.size() == seq_item_chk.FIFO_DEPTH-1)? 1 : 0; 
    95              1                       1021         almostempty_ref = (queue_check.size() == 1)? 1 : 0;
    96                                               
    97                                               
    98                                               endtask
    99                                               
    100                                              function void report_phase(uvm_phase phase);
    101             1                          1         super.report_phase(phase);
    102             1                          1         `uvm_info("report_phase",$sformatf("Total successful Transaction: %0d",correct_count),UVM_MEDIUM);
    103             1                          1         `uvm_info("report_phase",$sformatf("Total Failed Transaction: %0d",error_count),UVM_MEDIUM);


=================================================================================
=== Instance: /FIFO_coverage_pkg
=== Design Unit: work.FIFO_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses         17        na        na        na
            Covergroup Bins         66        66         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /FIFO_coverage_pkg/FIFO_coverage/g1             100.00%        100          -    Covered              
    covered/total bins:                                    66         66          -                      
    missing/total bins:                                     0         66          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint RST                                    100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                        18          1          -    Covered              
        bin auto[1]                                      1003          1          -    Covered              
    Coverpoint wr_en                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       299          1          -    Covered              
        bin auto[1]                                       722          1          -    Covered              
    Coverpoint rd_en                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       701          1          -    Covered              
        bin auto[1]                                       320          1          -    Covered              
    Coverpoint wr_ack                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       598          1          -    Covered              
        bin auto[1]                                       423          1          -    Covered              
    Coverpoint overflow                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       734          1          -    Covered              
        bin auto[1]                                       287          1          -    Covered              
    Coverpoint underflow                              100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1009          1          -    Covered              
        bin auto[1]                                        12          1          -    Covered              
    Coverpoint full                                   100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       619          1          -    Covered              
        bin auto[1]                                       402          1          -    Covered              
    Coverpoint empty                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       991          1          -    Covered              
        bin auto[1]                                        30          1          -    Covered              
    Coverpoint almostfull                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       745          1          -    Covered              
        bin auto[1]                                       276          1          -    Covered              
    Coverpoint almostempty                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       975          1          -    Covered              
        bin auto[1]                                        46          1          -    Covered              
    Cross wr_en_rd_en_wr_ack                          100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                 127          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 296          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  88          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 100          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 199          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 193          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ignore_bin1                          0                     -    ZERO                 
    Cross wr_en_rd_en_overflow                        100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  88          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 199          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 127          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 100          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 296          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 193          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ignore_bin2                          0                     -    ZERO                 
    Cross wr_en_rd_en_underflow                       100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                   7          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 208          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                   5          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  95          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 495          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 193          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ignore_bin3                          0                     -    ZERO                 
    Cross wr_en_rd_en_full                            100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[0]>                 215          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 100          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 326          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 169          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  76          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 117          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ignore_bin4                          0                     -    ZERO                 
    Cross wr_en_rd_en_empty                           100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[0],auto[1],auto[1]>                   9          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   3          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 215          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  91          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 495          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 190          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ignore_bin5                          0                     -    ZERO                 
    Cross wr_en_rd_en_almostfull                      100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                 148          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  30          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                  42          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  56          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  67          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  70          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 453          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 137          1          -    Covered              
    Cross wr_en_rd_en_almostempty                     100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  20          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                   5          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                  15          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   6          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 195          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  95          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 480          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 187          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /FIFO_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_coverage.sv
    1                                                package FIFO_coverage_pkg;
    2                                                import FIFO_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class FIFO_coverage extends uvm_component;
    6                                                    
    7               1                    ***0***       `uvm_component_utils(FIFO_coverage);
    7               2                    ***0***     
    7               3                          2     
    8                                                    FIFO_seq_item seq_item;
    9                                                    uvm_analysis_export #(FIFO_seq_item) cov_export;
    10                                                   uvm_tlm_analysis_fifo #(FIFO_seq_item) cov_fifo;
    11                                               
    12                                               
    13                                               covergroup g1;
    14                                               
    15                                               // EXTRA will cover rst also
    16                                                     RST           : coverpoint  seq_item.rst_n;
    17                                                     wr_en         : coverpoint  seq_item.wr_en;
    18                                                     rd_en         : coverpoint  seq_item.rd_en;
    19                                                     wr_ack        : coverpoint  seq_item.wr_ack;
    20                                                     overflow      : coverpoint  seq_item.overflow;
    21                                                     underflow     : coverpoint  seq_item.underflow;
    22                                                     full          : coverpoint  seq_item.full;
    23                                                     empty         : coverpoint  seq_item.empty;
    24                                                     almostfull    : coverpoint  seq_item.almostfull;
    25                                                     almostempty   : coverpoint  seq_item.almostempty;
    26                                               
    27                                                       wr_en_rd_en_wr_ack      : cross wr_en , rd_en , wr_ack  iff (seq_item.rst_n)
    28                                                       {
    29                                                         ignore_bins ignore_bin1  =  binsof(wr_en)  intersect {0} && binsof(wr_ack)    intersect {1};
    30                                                     
    31                                                       }  // only if rst deasseted
    32                                                       wr_en_rd_en_overflow    : cross wr_en , rd_en , overflow iff (seq_item.rst_n) 
    33                                                       {
    34                                                         ignore_bins ignore_bin2  =  binsof(wr_en)  intersect {0} &&  binsof(overflow) intersect {1}; 
    35                                                       }// only if rst deasseted
    36                                                       wr_en_rd_en_underflow   : cross wr_en , rd_en , underflow iff (seq_item.rst_n) 
    37                                                       {
    38                                                         ignore_bins ignore_bin3  =  binsof(rd_en)  intersect {0} && binsof(underflow) intersect {1};
    39                                                       } // only if rst deasseted
    40                                                       wr_en_rd_en_full        : cross wr_en , rd_en , full     iff (seq_item.rst_n) 
    41                                                       {                                        
    42                                                         ignore_bins ignore_bin4 =   binsof(rd_en)  intersect {1} && binsof(full)      intersect {1};
    43                                                       } // only if rst deasseted
    44                                                       wr_en_rd_en_empty       : cross wr_en , rd_en , empty    iff (seq_item.rst_n) 
    45                                                       {                               
    46                                                         ignore_bins ignore_bin5 =  binsof(wr_en)  intersect {1} && binsof(empty)     intersect {1};
    47                                                       } // only if rst deasseted
    48                                                       wr_en_rd_en_almostfull  : cross wr_en , rd_en , almostfull   iff (seq_item.rst_n) ; // only if rst deasseted
    49                                                       wr_en_rd_en_almostempty : cross wr_en , rd_en , almostempty  iff (seq_item.rst_n) ; // only if rst deasseted
    50                                                       endgroup
    51                                               
    52                                               function new (string name ="FIFO_coverage", uvm_component parent = null);
    53              1                          1         super.new (name,parent);  
    54              1                          1         g1=new();  
    55                                               endfunction
    56                                               
    57                                               function void build_phase(uvm_phase phase);
    58              1                          1         super.build_phase(phase);
    59              1                          1         cov_export = new("cov_export",this);
    60              1                          1         cov_fifo = new("cov_fifo",this);
    61                                               endfunction
    62                                               
    63                                               function void connect_phase(uvm_phase phase);
    64              1                          1         super.connect_phase(phase);
    65              1                          1         cov_export.connect(cov_fifo.analysis_export);
    66                                               endfunction
    67                                               
    68                                               task  run_phase(uvm_phase phase);
    69              1                          1       super.run_phase(phase);
    70                                               
    71              1                          1         forever begin
    72              1                       1022           cov_fifo.get(seq_item);
    73              1                       1021           g1.sample();


=================================================================================
=== Instance: /FIFO_mon_pkg
=== Design Unit: work.FIFO_mon_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_mon_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_mon.sv
------------------------------------IF Branch------------------------------------
    46                                      1021     Count coming in to IF
    46              1                    ***0***         `uvm_info ("run_phas",rsp_seq_item.convert2string_stimulus(),UVM_HIGH);
                                            1021     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      24        21         3    87.50%

================================Statement Details================================

Statement Coverage for instance /FIFO_mon_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_mon.sv
    1                                                package FIFO_mon_pkg;
    2                                                    import uvm_pkg::*;
    3                                                `include "uvm_macros.svh" ;
    4                                                import FIFO_seq_item_pkg::*;
    5                                                
    6                                                class FIFO_mon extends uvm_monitor;
    7                                                
    8               1                    ***0***     `uvm_component_utils (FIFO_mon)
    8               2                    ***0***     
    8               3                          2     
    9                                                virtual FIFO_Interface FIFO_vif;
    10                                               FIFO_seq_item rsp_seq_item;
    11                                               
    12                                               uvm_analysis_port #(FIFO_seq_item) mon_ap;
    13                                               
    14                                               function new (string name ="FIFO_mon", uvm_component parent = null);
    15              1                          1       super.new (name,parent);
    16                                                   
    17                                               endfunction
    18                                               
    19                                               function void build_phase(uvm_phase phase);
    20              1                          1         super.build_phase(phase);
    21                                               
    22              1                          1     mon_ap = new ("mon_ap",this);
    23                                               
    24                                               endfunction
    25                                               
    26                                               task run_phase(uvm_phase phase);
    27              1                          1         super.run_phase(phase); 
    28              1                          1         forever begin
    29              1                       1022           rsp_seq_item= FIFO_seq_item :: type_id :: create("rsp_seq_item");
    30              1                       1022          @(negedge FIFO_vif.clk );
    31                                               
    32              1                       1021           rsp_seq_item.data_in     = FIFO_vif.data_in;
    33              1                       1021           rsp_seq_item.rst_n       = FIFO_vif.rst_n;
    34              1                       1021           rsp_seq_item.rd_en       = FIFO_vif.rd_en;
    35              1                       1021           rsp_seq_item.wr_en       = FIFO_vif.wr_en;
    36              1                       1021           rsp_seq_item.data_out    = FIFO_vif.data_out;
    37              1                       1021           rsp_seq_item.wr_ack      = FIFO_vif.wr_ack;
    38              1                       1021           rsp_seq_item.overflow    = FIFO_vif.overflow;
    39              1                       1021           rsp_seq_item.underflow   = FIFO_vif.underflow;
    40              1                       1021           rsp_seq_item.full        = FIFO_vif.full;
    41              1                       1021           rsp_seq_item.empty       = FIFO_vif.empty;
    42              1                       1021           rsp_seq_item.almostfull  = FIFO_vif.almostfull;
    43              1                       1021           rsp_seq_item.almostempty = FIFO_vif.almostempty;
    44                                                   
    45              1                       1021         mon_ap.write(rsp_seq_item);
    46              1                    ***0***         `uvm_info ("run_phas",rsp_seq_item.convert2string_stimulus(),UVM_HIGH);


=================================================================================
=== Instance: /FIFO_config_pkg
=== Design Unit: work.FIFO_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_config.sv
------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               1                    ***0***       `uvm_object_utils (FIFO_config_class);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               2                    ***0***       `uvm_object_utils (FIFO_config_class);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               3                    ***0***       `uvm_object_utils (FIFO_config_class);
    5               4                    ***0***       `uvm_object_utils (FIFO_config_class);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               5                    ***0***       `uvm_object_utils (FIFO_config_class);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               6                    ***0***       `uvm_object_utils (FIFO_config_class);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_config_pkg --

  File FIFO_config.sv
----------------Focused Condition View-------------------
Line       5 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       5 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /FIFO_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_config.sv
    1                                                package FIFO_config_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                class FIFO_config_class extends uvm_object;
    5               1                    ***0***       `uvm_object_utils (FIFO_config_class);
    5               2                    ***0***     
    5               3                    ***0***     
    5               4                    ***0***     
    5               5                    ***0***     
    5               6                    ***0***     
    5               7                    ***0***     
    5               8                    ***0***     
    5               9                    ***0***     
    5              10                    ***0***     
    6                                                
    7                                                  virtual FIFO_Interface FIFO_vif;
    8                                                
    9                                                function new (string name ="FIFO_config_class");
    10              1                          1       super.new (name);


=================================================================================
=== Instance: /FIFO_driver_pkg
=== Design Unit: work.FIFO_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_driver.sv
------------------------------------IF Branch------------------------------------
    32                                      1021     Count coming in to IF
    32              1                    ***0***         `uvm_info ("run_phas",stim_seq_item.convert2string_stimulus(),UVM_HIGH);
                                            1021     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        12         3    80.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_driver.sv
    1                                                package FIFO_driver_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import FIFO_config_pkg::*;
    5                                                import FIFO_seq_item_pkg::*;
    6                                                
    7                                                class FIFO_driver_class extends uvm_driver #(FIFO_seq_item);
    8                                                
    9               1                    ***0***     `uvm_component_utils (FIFO_driver_class)
    9               2                    ***0***     
    9               3                          2     
    10                                               virtual FIFO_Interface FIFO_vif;
    11                                               FIFO_config_class FIFO_cnfg;
    12                                               
    13                                               FIFO_seq_item stim_seq_item;
    14                                               
    15                                               function new (string name ="FIFO_driver_class", uvm_component parent = null);
    16              1                          1       super.new (name,parent);  
    17                                               endfunction
    18                                               
    19                                               task run_phase(uvm_phase phase);
    20              1                          1       super.run_phase(phase); 
    21              1                          1       forever begin
    22              1                       1022         stim_seq_item= FIFO_seq_item :: type_id :: create("stim_seq_item");
    23              1                       1022         seq_item_port.get_next_item(stim_seq_item);
    24                                               
    25              1                       1021         FIFO_vif.data_in      = stim_seq_item.data_in;
    26              1                       1021         FIFO_vif.rst_n        = stim_seq_item.rst_n;
    27              1                       1021         FIFO_vif.wr_en        = stim_seq_item.wr_en;
    28              1                       1021         FIFO_vif.rd_en        = stim_seq_item.rd_en;
    29                                                
    30              1                       1021         @(negedge FIFO_vif.clk );
    31              1                       1021         seq_item_port.item_done();
    32              1                    ***0***         `uvm_info ("run_phas",stim_seq_item.convert2string_stimulus(),UVM_HIGH);


=================================================================================
=== Instance: /FIFO_sequencer_pkg
=== Design Unit: work.FIFO_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_sequencer.sv
    1                                                package FIFO_sequencer_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import FIFO_seq_item_pkg::*;
    5                                                class FIFO_sequencer extends uvm_sequencer#(FIFO_seq_item);
    6               1                    ***0***     `uvm_component_utils (FIFO_sequencer)
    6               2                    ***0***     
    6               3                          2     
    7                                                    function new (string name ="FIFO_sequencer", uvm_component parent = null);
    8               1                          1       super.new (name,parent);


=================================================================================
=== Instance: /FIFO_agent_pkg
=== Design Unit: work.FIFO_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         1         3    25.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_agent.sv
------------------------------------IF Branch------------------------------------
    29                                         1     Count coming in to IF
    29              1                    ***0***     if(!uvm_config_db#(FIFO_config_class) :: get(this,"","CFG",FIFO_cnfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    30                                   ***0***     Count coming in to IF
    30              1                    ***0***         `uvm_fatal ("build_phas","unable to get configuration objecet ");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        12         3    80.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_agent.sv
    1                                                package FIFO_agent_pkg;
    2                                                
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh" ;
    5                                                import FIFO_sequencer_pkg::*;
    6                                                import FIFO_driver_pkg::*;
    7                                                import FIFO_config_pkg::*;
    8                                                import FIFO_mon_pkg::*;
    9                                                import FIFO_seq_item_pkg::*;
    10                                               
    11                                               class FIFO_agent extends uvm_agent;
    12                                               
    13              1                    ***0***     `uvm_component_utils (FIFO_agent)
    13              2                    ***0***     
    13              3                          2     
    14                                               
    15                                               FIFO_sequencer sqr;
    16                                               FIFO_driver_class driver;
    17                                               FIFO_config_class FIFO_cnfg;
    18                                               FIFO_mon mon;
    19                                               
    20                                               uvm_analysis_port #(FIFO_seq_item) agt_ap;
    21                                               
    22                                                  function new (string name ="FIFO_agent", uvm_component parent = null);
    23              1                          1       super.new (name,parent);
    24                                                   
    25                                               endfunction
    26                                               
    27                                               function void build_phase(uvm_phase phase);
    28              1                          1         super.build_phase(phase);
    29                                               if(!uvm_config_db#(FIFO_config_class) :: get(this,"","CFG",FIFO_cnfg))
    30              1                    ***0***         `uvm_fatal ("build_phas","unable to get configuration objecet ");
    31              1                          1     driver = FIFO_driver_class :: type_id :: create ("driver",this);
    32              1                          1     sqr    = FIFO_sequencer :: type_id :: create ("sqr",this);
    33              1                          1     mon    = FIFO_mon :: type_id :: create ("mon",this);
    34              1                          1     agt_ap = new ("agt_ap",this);
    35                                               
    36                                               endfunction
    37                                               
    38                                               function void connect_phase (uvm_phase phase);
    39              1                          1       super.connect_phase(phase)  ;
    40              1                          1       driver.FIFO_vif=FIFO_cnfg.FIFO_vif;
    41              1                          1       mon.FIFO_vif=FIFO_cnfg.FIFO_vif;
    42              1                          1       driver.seq_item_port.connect(sqr.seq_item_export);
    43              1                          1       mon.mon_ap.connect(agt_ap);


=================================================================================
=== Instance: /FIFO_env_pkg
=== Design Unit: work.FIFO_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      10         8         2    80.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_env.sv
    1                                                package FIFO_env_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh" ;
    4                                                import FIFO_agent_pkg::*;
    5                                                import FIFO_coverage_pkg::*;
    6                                                import FIFO_score_pkg::*;
    7                                                class FIFO_env_class extends uvm_env;
    8                                                
    9               1                    ***0***         `uvm_component_utils (FIFO_env_class)
    9               2                    ***0***     
    9               3                          2     
    10                                               
    11                                                  FIFO_agent agt;
    12                                                  FIFO_score sb;
    13                                                  FIFO_coverage cov;
    14                                                   
    15                                               function new(string name ="FIFO_env_class", uvm_component parent = null);
    16              1                          1            super.new (name,parent);  
    17                                               endfunction
    18                                               
    19                                               function void build_phase (uvm_phase phase);
    20                                               
    21              1                          1     super.build_phase(phase);
    22              1                          1     agt = FIFO_agent    :: type_id :: create ("agt",this);
    23              1                          1     sb  = FIFO_score    :: type_id :: create ("sb",this);
    24              1                          1     cov = FIFO_coverage :: type_id :: create ("cov",this);
    25                                               
    26                                               endfunction
    27                                               
    28                                               function void  connect_phase(uvm_phase phase);
    29              1                          1        agt.agt_ap.connect(sb.sb_export) ;
    30              1                          1        agt.agt_ap.connect(cov.cov_export);


=================================================================================
=== Instance: /FIFO_test_pkg
=== Design Unit: work.FIFO_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        20         9        11    45.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_test.sv
------------------------------------IF Branch------------------------------------
    36                                         1     Count coming in to IF
    36              1                    ***0***         if(!uvm_config_db#(virtual FIFO_Interface) :: get(this,"","FIFO_if",FIFO_cnfg.FIFO_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    37                                   ***0***     Count coming in to IF
    37              1                    ***0***         `uvm_fatal ("build_phas","test - unable to get the virtual interface of the FIFO from uvm_config_db ");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    46                                         1     Count coming in to IF
    46              1                          1         `uvm_info("run_phase","RST is asserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    48                                         1     Count coming in to IF
    48              1                          1         `uvm_info("run_phase","RST is deasserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    50                                         1     Count coming in to IF
    50              1                          1         `uvm_info("run_phase","stimulus generation write_only_seq started",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    52                                         1     Count coming in to IF
    52              1                          1         `uvm_info("run_phase","stimulus generation write_only_seq ended",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    55                                         1     Count coming in to IF
    55              1                          1         `uvm_info("run_phase","stimulus generation read_only_seq started",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    57                                         1     Count coming in to IF
    57              1                          1         `uvm_info("run_phase","stimulus generation read_only_seq ended",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    59                                         1     Count coming in to IF
    59              1                          1         `uvm_info("run_phase","stimulus generation write_read_seq started",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    61                                         1     Count coming in to IF
    61              1                          1         `uvm_info("run_phase","stimulus generation write_read_seq ended",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      28        25         3    89.28%

================================Statement Details================================

Statement Coverage for instance /FIFO_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_test.sv
    1                                                package FIFO_test_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import FIFO_env_pkg::*;
    5                                                import FIFO_config_pkg::*;
    6                                                import FIFO_sequence_pkg::*;
    7                                                class FIFO_test_class extends uvm_test;
    8                                                
    9               1                    ***0***     `uvm_component_utils (FIFO_test_class)
    9               2                    ***0***     
    9               3                          4     
    10                                               
    11                                               FIFO_env_class env;
    12                                               FIFO_config_class FIFO_cnfg;
    13                                               
    14                                               FIFO_sequence_reset reset_seq;
    15                                               write_only_sequence write_only_seq;
    16                                               read_only_sequence read_only_seq;
    17                                               write_read_sequence write_read_seq;
    18                                               
    19                                               function new (string name ="FIFO_test_class", uvm_component parent = null);
    20              1                          1       super.new (name,parent);
    21                                                   
    22                                               endfunction
    23                                               
    24                                               function void build_phase(uvm_phase phase);
    25              1                          1       super.build_phase(phase);
    26              1                          1         env = FIFO_env_class :: type_id :: create ("env", this);
    27                                               
    28              1                          1         FIFO_cnfg = FIFO_config_class :: type_id :: create ("FIFO_cnfg");
    29                                               
    30              1                          1         reset_seq = FIFO_sequence_reset :: type_id :: create ("reset_seq");
    31                                               
    32              1                          1         write_only_seq = write_only_sequence :: type_id :: create ("write_only_seq");
    33              1                          1         read_only_seq  = read_only_sequence  :: type_id :: create ("read_only_seq");
    34              1                          1         write_read_seq = write_read_sequence :: type_id :: create ("write_read_seq");
    35                                               
    36                                                   if(!uvm_config_db#(virtual FIFO_Interface) :: get(this,"","FIFO_if",FIFO_cnfg.FIFO_vif))
    37              1                    ***0***         `uvm_fatal ("build_phas","test - unable to get the virtual interface of the FIFO from uvm_config_db ");
    38                                               
    39              1                          1         uvm_config_db #(FIFO_config_class) :: set (this,"*","CFG",FIFO_cnfg);
    40                                                   
    41                                               endfunction
    42                                               
    43                                               task run_phase(uvm_phase phase);
    44              1                          1         super.run_phase(phase);
    45              1                          1         phase.raise_objection(this);
    46              1                          1         `uvm_info("run_phase","RST is asserted",UVM_LOW)
    47              1                          1         reset_seq.start(env.agt.sqr);
    48              1                          1         `uvm_info("run_phase","RST is deasserted",UVM_LOW)
    49                                               
    50              1                          1         `uvm_info("run_phase","stimulus generation write_only_seq started",UVM_LOW)
    51              1                          1         write_only_seq.start(env.agt.sqr);
    52              1                          1         `uvm_info("run_phase","stimulus generation write_only_seq ended",UVM_LOW)
    53                                               
    54                                               
    55              1                          1         `uvm_info("run_phase","stimulus generation read_only_seq started",UVM_LOW)
    56              1                          1         read_only_seq.start(env.agt.sqr);
    57              1                          1         `uvm_info("run_phase","stimulus generation read_only_seq ended",UVM_LOW)
    58                                               
    59              1                          1         `uvm_info("run_phase","stimulus generation write_read_seq started",UVM_LOW)
    60              1                          1         write_read_seq.start(env.agt.sqr);
    61              1                          1         `uvm_info("run_phase","stimulus generation write_read_seq ended",UVM_LOW)
    62                                               
    63                                               
    64              1                          1         phase.drop_objection(this);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /FIFO_coverage_pkg/FIFO_coverage/g1             100.00%        100          -    Covered              
    covered/total bins:                                    66         66          -                      
    missing/total bins:                                     0         66          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint RST                                    100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                        18          1          -    Covered              
        bin auto[1]                                      1003          1          -    Covered              
    Coverpoint wr_en                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       299          1          -    Covered              
        bin auto[1]                                       722          1          -    Covered              
    Coverpoint rd_en                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       701          1          -    Covered              
        bin auto[1]                                       320          1          -    Covered              
    Coverpoint wr_ack                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       598          1          -    Covered              
        bin auto[1]                                       423          1          -    Covered              
    Coverpoint overflow                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       734          1          -    Covered              
        bin auto[1]                                       287          1          -    Covered              
    Coverpoint underflow                              100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1009          1          -    Covered              
        bin auto[1]                                        12          1          -    Covered              
    Coverpoint full                                   100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       619          1          -    Covered              
        bin auto[1]                                       402          1          -    Covered              
    Coverpoint empty                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       991          1          -    Covered              
        bin auto[1]                                        30          1          -    Covered              
    Coverpoint almostfull                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       745          1          -    Covered              
        bin auto[1]                                       276          1          -    Covered              
    Coverpoint almostempty                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       975          1          -    Covered              
        bin auto[1]                                        46          1          -    Covered              
    Cross wr_en_rd_en_wr_ack                          100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                 127          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 296          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  88          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 100          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 199          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 193          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ignore_bin1                          0                     -    ZERO                 
    Cross wr_en_rd_en_overflow                        100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  88          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 199          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 127          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 100          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 296          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 193          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ignore_bin2                          0                     -    ZERO                 
    Cross wr_en_rd_en_underflow                       100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                   7          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 208          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                   5          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  95          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 495          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 193          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ignore_bin3                          0                     -    ZERO                 
    Cross wr_en_rd_en_full                            100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[0]>                 215          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 100          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 326          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 169          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  76          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 117          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ignore_bin4                          0                     -    ZERO                 
    Cross wr_en_rd_en_empty                           100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[0],auto[1],auto[1]>                   9          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   3          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 215          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  91          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 495          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 190          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ignore_bin5                          0                     -    ZERO                 
    Cross wr_en_rd_en_almostfull                      100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                 148          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  30          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                  42          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  56          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  67          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  70          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 453          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 137          1          -    Covered              
    Cross wr_en_rd_en_almostempty                     100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  20          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                   5          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                  15          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   6          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 195          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  95          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 480          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 187          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/Assertions_inst/wr_ptr2_c       Assertions Verilog  SVA  Assertions.sv(27)
                                                                               415 Covered   
/top/DUT/Assertions_inst/rd_ptr2_c       Assertions Verilog  SVA  Assertions.sv(40)
                                                                               295 Covered   
/top/DUT/Assertions_inst/counter2_c      Assertions Verilog  SVA  Assertions.sv(54)
                                                                               291 Covered   
/top/DUT/Assertions_inst/counter3_c      Assertions Verilog  SVA  Assertions.sv(61)
                                                                                92 Covered   
/top/DUT/Assertions_inst/counter4_c      Assertions Verilog  SVA  Assertions.sv(67)
                                                                                86 Covered   
/top/DUT/Assertions_inst/counter5_c      Assertions Verilog  SVA  Assertions.sv(73)
                                                                                 7 Covered   
/top/DUT/Assertions_inst/wr_ack2_c       Assertions Verilog  SVA  Assertions.sv(86)
                                                                               415 Covered   
/top/DUT/Assertions_inst/wr_ack3_c       Assertions Verilog  SVA  Assertions.sv(92)
                                                                               570 Covered   
/top/DUT/Assertions_inst/overflow2_c     Assertions Verilog  SVA  Assertions.sv(105)
                                                                               282 Covered   
/top/DUT/Assertions_inst/overflow3_c     Assertions Verilog  SVA  Assertions.sv(111)
                                                                               415 Covered   
/top/DUT/Assertions_inst/underflow2_c    Assertions Verilog  SVA  Assertions.sv(124)
                                                                                12 Covered   
/top/DUT/Assertions_inst/underflow3_c    Assertions Verilog  SVA  Assertions.sv(130)
                                                                               295 Covered   
/top/DUT/Assertions_inst/full1_c         Assertions Verilog  SVA  Assertions.sv(138)
                                                                               393 Covered   
/top/DUT/Assertions_inst/full2_c         Assertions Verilog  SVA  Assertions.sv(144)
                                                                               628 Covered   
/top/DUT/Assertions_inst/almostfull1_c   Assertions Verilog  SVA  Assertions.sv(151)
                                                                               272 Covered   
/top/DUT/Assertions_inst/almostfull2_c   Assertions Verilog  SVA  Assertions.sv(157)
                                                                               749 Covered   
/top/DUT/Assertions_inst/full_almostfull1_c 
                                         Assertions Verilog  SVA  Assertions.sv(164)
                                                                               123 Covered   
/top/DUT/Assertions_inst/full_almostfull2_c 
                                         Assertions Verilog  SVA  Assertions.sv(171)
                                                                                28 Covered   
/top/DUT/Assertions_inst/empty1_c        Assertions Verilog  SVA  Assertions.sv(178)
                                                                                48 Covered   
/top/DUT/Assertions_inst/empty2_c        Assertions Verilog  SVA  Assertions.sv(184)
                                                                               973 Covered   
/top/DUT/Assertions_inst/almostempty1_c  Assertions Verilog  SVA  Assertions.sv(192)
                                                                                46 Covered   
/top/DUT/Assertions_inst/almostempty2_c  Assertions Verilog  SVA  Assertions.sv(198)
                                                                               975 Covered   
/top/DUT/Assertions_inst/empty_almostempty1_c 
                                         Assertions Verilog  SVA  Assertions.sv(206)
                                                                                 4 Covered   
/top/DUT/Assertions_inst/empty_almostempty2_c 
                                         Assertions Verilog  SVA  Assertions.sv(213)
                                                                                15 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 24

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/Assertions_inst/max_fifo_addr_p
                     Assertions.sv(13)                  0          1
/top/DUT/Assertions_inst/wr_ptr1_p
                     Assertions.sv(20)                  0          1
/top/DUT/Assertions_inst/wr_ptr2_p
                     Assertions.sv(26)                  0          1
/top/DUT/Assertions_inst/rd_ptr1_p
                     Assertions.sv(33)                  0          1
/top/DUT/Assertions_inst/rd_ptr2_p
                     Assertions.sv(39)                  0          1
/top/DUT/Assertions_inst/counter1_p
                     Assertions.sv(47)                  0          1
/top/DUT/Assertions_inst/counter2_p
                     Assertions.sv(53)                  0          1
/top/DUT/Assertions_inst/counter3_p
                     Assertions.sv(60)                  0          1
/top/DUT/Assertions_inst/counter4_p
                     Assertions.sv(66)                  0          1
/top/DUT/Assertions_inst/counter5_p
                     Assertions.sv(72)                  0          1
/top/DUT/Assertions_inst/wr_ack1_p
                     Assertions.sv(79)                  0          1
/top/DUT/Assertions_inst/wr_ack2_p
                     Assertions.sv(85)                  0          1
/top/DUT/Assertions_inst/wr_ack3_p
                     Assertions.sv(91)                  0          1
/top/DUT/Assertions_inst/overflow1_p
                     Assertions.sv(98)                  0          1
/top/DUT/Assertions_inst/overflow2_p
                     Assertions.sv(104)                 0          1
/top/DUT/Assertions_inst/overflow3_p
                     Assertions.sv(110)                 0          1
/top/DUT/Assertions_inst/underflow1_p
                     Assertions.sv(117)                 0          1
/top/DUT/Assertions_inst/underflow2_p
                     Assertions.sv(123)                 0          1
/top/DUT/Assertions_inst/underflow3_p
                     Assertions.sv(129)                 0          1
/top/DUT/Assertions_inst/full1_p
                     Assertions.sv(137)                 0          1
/top/DUT/Assertions_inst/full2_p
                     Assertions.sv(143)                 0          1
/top/DUT/Assertions_inst/almostfull1_p
                     Assertions.sv(150)                 0          1
/top/DUT/Assertions_inst/almostfull2_p
                     Assertions.sv(156)                 0          1
/top/DUT/Assertions_inst/full_almostfull1_p
                     Assertions.sv(163)                 0          1
/top/DUT/Assertions_inst/full_almostfull2_p
                     Assertions.sv(170)                 0          1
/top/DUT/Assertions_inst/empty1_p
                     Assertions.sv(177)                 0          1
/top/DUT/Assertions_inst/empty2_p
                     Assertions.sv(183)                 0          1
/top/DUT/Assertions_inst/almostempty1_p
                     Assertions.sv(191)                 0          1
/top/DUT/Assertions_inst/almostempty2_p
                     Assertions.sv(197)                 0          1
/top/DUT/Assertions_inst/empty_almostempty1_p
                     Assertions.sv(205)                 0          1
/top/DUT/Assertions_inst/empty_almostempty2_p
                     Assertions.sv(212)                 0          1
/FIFO_sequence_pkg/write_only_sequence/body/#ublk#38615015#40/immed__43
                     FIFO_sequence.sv(43)               0          1
/FIFO_sequence_pkg/read_only_sequence/body/#ublk#38615015#62/immed__65
                     FIFO_sequence.sv(65)               0          1
/FIFO_sequence_pkg/write_read_sequence/body/#ublk#38615015#85/immed__88
                     FIFO_sequence.sv(88)               0          1

Total Coverage By Instance (filtered view): 83.89%

